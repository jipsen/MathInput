// Math Unicode Input by Peter Jipsen, jipsen@chapman.edu, 2019-02-04

function MathInput(id) {
    tbox = document.getElementById(id);
    pdate = new Date();
    tbox.onkeyup = function (evt) {
        if (!evt) {evt = window.event;}
        ndate = new Date();
        if (ndate.getTime() > pdate.getTime() + 150) {
            var kc = evt.keyCode;
            if (kc == 16 || kc == 32 || kc>=48 && kc<=111) MIsearchSymbols(tbox);
            pdate = ndate;
        }
    };
}

MIselectRange = function (tbox, beg, len) {
    if (tbox.createTextRange) { //IE
        var rng = tbox.createTextRange();
        rng.moveStart("character", beg);
        rng.moveEnd("character", len);
        rng.select();
    } else if (tbox.setSelectionRange) {
        tbox.setSelectionRange(beg, len);
    }
    tbox.focus();
};

MItriggerChar1 = "\\"
MItriggerChar2 = "z"

MIsearchSymbols = function (tbox) {
    var b = tbox.selectionStart;
    var e = tbox.selectionEnd;
    var st = tbox.value;
    var p = st.slice(0, b).lastIndexOf(MItriggerChar1);
    if (p==-1 || /\W/.test(st.slice(p+1,b-1))) p = st.slice(0, b).lastIndexOf(MItriggerChar2);
    if (p >= 0 && p+1 < b && !(/\W/.test(st.slice(p+1,b-1)))) { // \W = any non-word char
        var bl = (st.slice(b-1, b)==" ")                        // blank typed at end of symbol name
        if ((bl && p+2!=b) || !(/\W/.test(st.slice(b-1, b)))) {
            var stValue = st.slice(p+1, bl?b-1:b);
            for (var i=0; i < MIsymbols.length && MIsymbols[i].indexOf(stValue) != 0; i++) {}
            if (i < MIsymbols.length) {
                var name = bl?MIsymbols[i].slice(-1):MIsymbols[i];
                if (st.slice(b-1, b)==" ") {
                    tbox.value = st.slice(0,p) + name.slice(-1) + st.slice(e);
                    MIselectRange(tbox, p+1, p+1); //place cursor after character
                } else {
                    tbox.value = st.slice(0,b) + name.slice(b-p-1) + st.slice(e);
                    MIselectRange(tbox, b, e+name.length-b+p+1); //highlight name completion
                }
            }
        }
    }
};

MIsymbols = [
    'alpha α',
    'adots ⋰',
    'aleph ℵ',
    'amalg ⨿',
      'and ∧',
    'angle ∠',
    'Angle ⦜',
   'approx ≈',
     'beta β',
   'barcap ⩃',
   'barcup ⩂',
   'barvee ⊽',
 'barwedge ⊼',
     'BbbA 𝔸',
     'beth ℶ',
   'bigcap ⋂',
   'bigcup ⋃',
  'bigodot ⨀',
 'bigoplus ⨁',
'bigotimes ⨂',
 'bigsqcap ⨅',
 'bigsqcup ⨆',
  'bigstar ★',
 'bigtimes ⨉',
 'biguplus ⨃',
 'biguplus ⨄',
   'bigvee ⋁',
 'bigwedge ⋀',
 'Booleans 𝔹',
      'bot ⊥',
   'bowtie ⋈',
   'bullet •',
     'cdot ⋅',
   'cap ∩',
     'cbrt ∛',
    'cdots ⋯',
'checkmark ✓',
      'chi χ',
     'circ ∘',
 'clubsuit ♣',
'complement ∁',
  'Complex ℂ',
     'cong ≅',
   'coprod ∐',
      'cup ∪',
    'delta δ',
   'dagger †',
    'ddots ⋱',
   'degree °',
      'del ∇',
    'Delta Δ',
'diamondsuit ♢',
      'div ÷',
 'dotminus ∸',
'downarrow ↓',
'Downarrow ⇓',
'downzigzagarrow ↯',
  'epsilon ϵ',
      'ell ℓ',
 'emptyset ∅',
    'equiv ≡',
      'eta η',
     'euro €',
   'exists ∃',
   'forall ∀',
    'False 𝔽',
     'flat ♭',
'fourthroot ∜',
    'frown ⌢',
    'Gamma Γ',
    'gamma γ',
       'ge ≥',
     'geqq ≧',
       'gg ≫',
     'hbar ħ',
'heartsuit ♡',
'hookrightarrow ↪',
       'in ∈',
      'iff ⟺',
    'iiint ∭',
     'iint ∬',
       'Im ℑ',
  'implies ⟹',
    'infty ∞',
      'int ∫',
 'Integers ℤ',
    'kappa κ',
   'lambda λ',
   'Lambda Λ',
     'land ∧',
   'langle ⟨',
    'lceil ⌈',
    'ldots …',
       'le ≤',
'leftarrow ←',
'Leftarrow ⇐',
'leftrightarrow ↔',
'Leftrightarrow ⇔',
     'leqq ≦',
   'lfloor ⌊',
       'll ≪',
'llbracket ⟦',
'Longleftarrow ⟸',
      'lor ∨',
  'lozenge ◊',
   'ltimes ⋉',
   'mapsto ↦',
 'mapsfrom ↤',
     'mbfA 𝐀',
 'mbffrakA 𝕬',
    'mbfit 𝑨',
'mbfitsansA 𝘼',
 'mbfsansA 𝗔',
  'mbfscrA 𝓐',
   'mfrakA 𝔄',
      'mid ∣',
 'minusdot ⨪',
     'mitA 𝐴',
 'mitsansA 𝘈',
       'mp ∓',
   'msansA 𝖠',
    'mscrA 𝒜',
     'mttA 𝙰',
       'mu μ',
      'not ¬',
 'Naturals ℕ',
       'ne ≠',
      'neg ¬',
  'nexists ∄',
      'nge ≱',
     'ngtr ≯',
       'ni ∋',
      'nle ≰',
    'nless ≮',
     'nmid ∤',
    'notin ∉',
    'notni ∌',
'nparallel ∦',
    'nprec ⊀',
  'nsubset ⊄',
'nsubseteq ⊈',
    'nsucc ⊁',
  'nsupset ⊅',
'nsupseteq ⊉',
       'nu ν',
   'nvdash ⊬',
   'nvDash ⊭',
    'omega ω',
  'obslash ⦸',
     'odot ⊙',
   'oiiint ∰',
    'oiint ∯',
     'oint ∮',
    'Omega Ω',
   'ominus ⊖',
    'oplus ⊕',
   'otimes ⊗',
       'or ∨',
   'oslash ⊘',
  'partial ∂',
 'parallel ∥',
      'Phi Φ',
      'phi ϕ',
       'Pi Π',
       'pi π',
       'pm ±',
     'prec ≺',
   'preceq ⪯',
   'Primes ℙ',
     'prod ∏',
   'propto ∝',
      'psi ψ',
      'Psi Ψ',
      'qed ∎',
'rightarrow →',
   'rangle ⟩',
'Rationals ℚ',
    'rceil ⌉',
       'Re ℜ',
    'Reals ℝ',
   'rfloor ⌋',
      'rho ρ',
'Rightarrow ⇒',
'rightarrowtail ↣',
'rrbracket ⟧',
   'rtimes ⋊',
    'sigma σ',
    'sharp ♯',
    'Sigma Σ',
      'sim ∼',
    'smile ⌣',
'spadesuit ♠',
    'sqcap ⊓',
    'sqcup ⊔',
     'sqrt √',
 'sqsubset ⊏',
'sqsubseteq ⊑',
 'sqsupset ⊐',
'sqsupseteq ⊒',
   'square □',
     'sube ⊆',
   'subset ⊂',
 'subseteq ⊆',
'subsetneq ⊊',
     'succ ≻',
   'succeq ⪰',
      'sum ∑',
     'supe ⊇',
   'supset ⊃',
 'supseteq ⊇',
'supsetneq ⊋',
      'tau τ',
   'tensor ⊗',
'therefore ∴',
    'theta θ',
    'Theta Θ',
    'times ×',
       'to →',
      'top ⊤',
'triangleleft ◃',
'triangleright ▹',
     'True 𝕋',
'twoheadrightarrow ↠',
  'uparrow ↑',
  'Uparrow ⇑',
'updownarrow ↕',
'Updownarrow ⇕',
    'uplus ⊎',
  'upsilon υ',
'varepsilon ɛ',
   'varphi φ',
 'vartheta ϑ',
    'vdash ⊢',
    'vDash ⊨',
    'Vdash ⊩',
      'vee ∨',
    'wedge ∧',
       'wp ℘',
       'wr ≀',
       'Xi Ξ',
       'xi ξ',
     'zeta ζ'];